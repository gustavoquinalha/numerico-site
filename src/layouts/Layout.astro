---
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Web & Design Studio" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Fira+Code:wght@600&display=swap" rel="stylesheet" />

    <meta name="theme-color" content="#ffffff" />
    <!-- Open Graph / Facebook -->
    <meta property="og:title" content="numeric0" />
    <meta property="og:description" content="Web & Design Studio" />
    <meta property="og:type" content="website" />
    <meta property="og:image:alt" content="number zero" />
    <meta property="og:image" content="https://numeric0.com/images/intro3.png" />
    <meta property="og:url" content="https://www.numeric0.com" />
    <meta property="fb:app_id" content="739468404727575" />
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content="https://numeric0.com/" />
    <meta property="twitter:title" content="numeric0" />
    <meta property="twitter:description" content="Web & Design Studio" />
    <meta property="twitter:image" content="https://numeric0.com/images/intro3.png" />
  </head>
  <body class="bg-stone-100">
    <div class="loader flex items-center justify-center text-center w-screen h-screen bg-neutral-950 z-50 gap-4 text-green-600">
      <span id="loading" class="">0%</span>
    </div>
    <slot />
  </body>
</html>

<script>
  import TypeIt from 'typeit';

  new TypeIt('#logo', {
    speed: 400,
    startDelay: 1000,
    loop: true,
  })
    .type('num√©rico', { delay: 400 })
    .pause(400)
    .delete(1)
    .pause(400)
    .type('0', { delay: 400 })
    .pause(400)
    .delete(1)
    .pause(400)
    .type('*', { delay: 400 })
    .go();
</script>

<script>
  import { gsap } from 'gsap';
  import { ScrollTrigger } from 'gsap/dist/ScrollTrigger';
  import imagesLoaded from 'imagesloaded';
  import SplitType from 'split-type';
  document.body.style.overflow = 'hidden';
  gsap.registerPlugin(ScrollTrigger, SplitType);
  ScrollTrigger.defaults({
    toggleActions: 'play pause resume reset',
    scroller: 'body',
  });

  const images: HTMLImageElement[] = gsap.utils.toArray('img');
  const loader = document.querySelector('#loading')!;
  const updateProgress = (instance: any) => (loader.textContent = `${Math.round((instance.progressedCount * 100) / images.length)}%`);

  const testee = () => {
    console.log('testee');

    gsap.to('#icone', {
      scrollTrigger: {
        trigger: 'body',
        start: 'top top',
        end: '40% top',
        scrub: true,
        // markers: true,
      },
      stagger: 0.1,
      y: -300,
      x: -800,
      scale: 2,
      ease: 'power1.in',
      scrub: true,
    });

    gsap.to('#menu', {
      scrollTrigger: {
        trigger: 'body',
        start: 'top top',
        end: '30% 20%',
        scrub: true,
        // markers: true,
      },
      stagger: 0.1,
      y: 200,
      x: 0,
      ease: 'power1.in',
      scrub: true,
    });

    gsap.to('#asterisco', {
      scrollTrigger: {
        trigger: 'body',
        start: '20% 50%',
        end: '60% top',
        scrub: true,
        // markers: true,
      },
      stagger: 0.1,
      left: '130%',
      y: 200,
      rotate: 540,
      ease: 'power1.in',
      scrub: true,
    });

    // let typeSplit = new SplitType('[animate]', {
    //   types: 'lines, words, chars',
    //   tagName: 'span',
    // });

    // gsap.from('[animate] .line', {
    //   y: '100%',
    //   opacity: 0,
    //   duration: 0.5,
    //   ease: 'power1.out',
    //   stagger: 0.1,
    // });
  };

  const loadFinished = () => {
    document.body.style.overflow = 'auto';
    document?.scrollingElement?.scrollTo(0, 0);
    gsap.to(document.querySelector('.loader'), { autoAlpha: 0 });
  };

  const loadAnimations = () => {
    console.log('loadAnimations');
    testee();
  };

  (imagesLoaded(images) as any).on('progress', updateProgress).on('done', loadFinished).on('always', loadAnimations);
</script>

<style is:global>
  html {
    font-family: 'Fira Code', monospace;
    font-weight: 600;
    overflow-x: hidden;
    height: 100%;
    -webkit-overflow-scrolling: touch;
    overflow-scrolling: touch;
    margin: 0;
    padding: 0;
    scroll-behavior: smooth;
  }
  body {
    margin: 0;
    padding: 0;
    overflow-x: hidden;
    position: relative;
    height: unset;
  }

  .loader {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    color: white;
    z-index: 10000;
  }
</style>
